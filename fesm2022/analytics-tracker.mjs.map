{"version":3,"file":"analytics-tracker.mjs","sources":["../../../projects/analytics-tracker/src/lib/analytics-tracker.service.ts","../../../projects/analytics-tracker/src/lib/analytics-tracker.component.ts","../../../projects/analytics-tracker/src/public-api.ts","../../../projects/analytics-tracker/src/analytics-tracker.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\ninterface VisitData {\r\n    website_username: string;\r\n    website_name: string;\r\n    session_key?: string;\r\n    page_url?: string;\r\n    user_agent?: string;\r\n    viewport_width?: number;\r\n    viewport_height?: number;\r\n    visit_date?: string;\r\n    visit_time?: string;\r\n    visit_duration?: number;\r\n    is_exit?: boolean;\r\n    referrer?: string;\r\n    ip_address?: string;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AnalyticsTrackerService {\r\n    private apiUrl = 'http://127.0.0.1:8000/api/dashboard/track-visit';\r\n    private sessionKey: string;\r\n    private username: string = '';\r\n    private websiteName: string = '';\r\n    private trackingActive = false;\r\n    private lastTrackedUrl: string = '';\r\n\r\n    constructor(private http: HttpClient) {\r\n        this.sessionKey = this.getOrCreateSessionKey();\r\n    }\r\n\r\n    /**\r\n     * Initialize tracking for current user\r\n     */\r\n    public initTracking(username: string, websiteName: string): void {\r\n        this.username = username;\r\n        this.websiteName = websiteName;\r\n        this.trackingActive = true;\r\n    }\r\n\r\n    /**\r\n     * Track page navigation\r\n     */\r\n    public trackPageNavigation(newUrl: string): void {\r\n        if (!this.trackingActive) return;\r\n\r\n        // Ensure we have a full URL\r\n        const fullUrl = newUrl.startsWith('http') ? newUrl : window.location.origin + newUrl;\r\n\r\n        // Skip if same URL\r\n        if (this.lastTrackedUrl === fullUrl) return;\r\n\r\n        this.lastTrackedUrl = fullUrl;\r\n\r\n        // Get current date and time\r\n        const now = new Date();\r\n        const options = { timeZone: 'Asia/Kolkata', hour12: false };\r\n        const visitDate = now.toLocaleDateString('en-CA', { timeZone: 'Asia/Kolkata' });\r\n        const visitTime = now.toLocaleTimeString('en-GB', options);\r\n        // Create visit data\r\n        const visitData: VisitData = {\r\n            website_username: this.username,\r\n            website_name: this.websiteName,\r\n            session_key: this.sessionKey,\r\n            page_url: fullUrl,\r\n            user_agent: navigator.userAgent,\r\n            viewport_width: window.innerWidth,\r\n            viewport_height: window.innerHeight,\r\n            visit_date: visitDate,\r\n            visit_time: visitTime,\r\n            visit_duration: 0,\r\n            is_exit: false,\r\n            referrer: document.referrer,\r\n            ip_address: ''\r\n        };\r\n\r\n        console.log('visitData', visitData);\r\n        // Send data\r\n        this.http.post(this.apiUrl, this.convertToFormData(visitData)).subscribe(\r\n            () => { },\r\n            error => console.error('Tracking error:', error.status)\r\n        );\r\n    }\r\n\r\n    private getOrCreateSessionKey(): string {\r\n        const key = 'analytics_session_key';\r\n        let sessionKey = localStorage.getItem(key);\r\n\r\n        if (!sessionKey) {\r\n            sessionKey = uuidv4();\r\n            localStorage.setItem(key, sessionKey);\r\n        }\r\n        return sessionKey;\r\n    }\r\n\r\n    private convertToFormData(data: any): FormData {\r\n        const formData = new FormData();\r\n        for (const key in data) {\r\n            if (data[key] != null) {\r\n                formData.append(key, data[key].toString());\r\n            }\r\n        }\r\n        return formData;\r\n    }\r\n}","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-analytics-tracker',\r\n  standalone: true,\r\n  imports: [],\r\n  template: `\r\n    <p>\r\n      analytics-tracker works!\r\n    </p>\r\n  `,\r\n  styles: ``\r\n})\r\nexport class AnalyticsTrackerComponent {\r\n\r\n}\r\n","/*\r\n * Public API Surface of analytics-tracker\r\n */\r\n\r\nexport * from './lib/analytics-tracker.service';\r\nexport * from './lib/analytics-tracker.component';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["uuidv4"],"mappings":"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"}